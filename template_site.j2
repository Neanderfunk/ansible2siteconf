-- Configuration Template for Neanderfunk / Eulenfunk - Gluon 2019.1.x
{
  hostname_prefix = '{{ hostname_prefix }}',
  site_name = 'Freifunk {{ name }} (Neanderfunk)',
  site_code = 'ffnef-{{ shortname }}',

  -- Must be the same of all nodes in one mesh domain
  domain_names = { ['ffnef_{{ shortname }}'] = '{{ name }}' },
  domain_seed = '{{ seed }}',

  config_mode = {
    hostname = {
      optional = false,
    },
    -- Show/hide the altitude field
    -- gluon 2018.2.x
    geo_location = {
      show_altitude = true,
      osm = {
      center = {
        lat = {{ lat }},
        lon = {{ lon }},
      },
      zoom = {{ zoom }},
       --- openlayers_url = 'https://tiles.ffdus.de/cartodb-basemaps-{s}.global.ssl.fastly.net/light_all/{z}/{x}/{y}.png',
      },
    },
    -- define if the contact field is obligatory (optional)
    -- disabled in 2017.1.8
    owner = {
      optional = true,
    },
    remote_login = {
      show_password_form = true,
      min_password_length = 12,
    },
  },

{% if withkey %}
  setup_mode = {
    skip = true,
  },
  authorized_keys = {
    {% for code, sshkey in authorized_keys.items() %}
      '{{ sshkey }}',
    {% endfor %}
  },
{% else %}
  setup_mode = {
    skip = false,
  },
  authorized_keys = { '',},
{% endif %}

  opkg = {
    openwrt = 'http://firmware.ffnef.de/opkg/openwrt/snapshots/packages/%A',
    extra = {
      gluon = 'http://download.ffnef.de/firmware/modules/gluon-%GR/%S',
    },
  },

  prefix4 = '{{ v4net }}',
  prefix6 = '{{ v6net }}',
  extra_prefixes6 = {
    -- for ebtables-source-filter
    '2a03:2260::/32',
    '2a0f:b507::/32',
    'fda0:300e::/32',
  },

  timezone = 'CET-1CEST,M3.5.0,M10.5.0/3',

  ntp_servers = {
    'ntp.ffnef.de',
    'ntp.ffdus.freifunk',
    '0.openwrt.pool.ntp.org',
    '1.openwrt.pool.ntp.org',
  },
  regdom = 'DE',

  wifi24 = {
    channel = {{ wifi24channel }},
    preserve_channels = 1,
    htmode = '{{ htmode24 }}',
    ap = {
      ssid = 'Freifunk',
    },
    mesh = {
      id = '{{ shortname }}-mesh',
      mcast_rate = 12000,
      disabled = false,
    },
  },
  wifi5 = {
    channel = {{ wifi5channel }},
    outdoor_chanlist = '100-140',
    htmode = {{ htmode5 }},
    ap = {
      ssid = 'Freifunk',
    },
    mesh = {
      id = '{{ shortname }}-mesh',
      mcast_rate = 12000,
      disabled = false,
    },
  },

  next_node = {
    name = {
      'nextnode',
      'nn',
    },
    -- anycast IPs of all nodes
{% if nextnode4 %}
    ip4 = '{{ nextnode4 }}',
    ip6 = '{{ nextnode6 }}',
{% else %}
    ip4 = '10.{{ id }}.0.1',
    ip6 = '2a03:2260:300e:{{ id }}00::1',
{% endif %}  
  },

  mesh_on_lan = true,
  mesh_on_wan = false,
  poe_passthrough = true,

  -- Options specific to routing protocols (optional)
  mesh = {
      vxlan = false,
      filter_membership_reports = true,
      -- Options specific to the batman-adv routing protocol (optional)
      batman_adv = {
          -- Gateway selection class (optional)
          -- The default class 20 is based on the link quality (TQ) only,
          -- class 1 is calculated from both the TQ and the announced bandwidth
          gw_sel_class = 1,
      },
  },

  mesh_vpn = {
    mtu = 1364,
    enabled = true,
    tunneldigger = {
      brokers = {'ganymed.ffnef.de:{{ port }}','kallisto.ffnef.de:{{ port }}','amalthea.ffnef.de:{{ port }}','himalia.ffnef.de:{{ port }}'},
    },
    bandwidth_limit = {
      enabled = false,
      egress =  1000,
      ingress = 12000,
    },
  },


  autoupdater = {
    enabled = 1,
    branch = 'RELBRANCH',
    branches = {
      stable = {
        name = 'stable',
        mirrors = {
          'http://firmware.{ id }}-{{ shortname }}.ffnef.de/firmware/stable//sysupgrade',
          'http://firmware.{ id }}-{{ shortname }}.ffnef/firmware/stable/{{ id }}-{{ shortname }}/sysupgrade',
          'http://firmware.ffnef.de/firmware/stable/{{ id }}-{{ shortname }}/sysupgrade',
          'http://[{{ v6prefix }}::733]/firmware/stable/ffnef-{{ shortname }}/sysupgrade',
        },
        good_signatures = 3,
        pubkeys = {
          'fb919d4adc69bd404f5093ce6b43badf351f9e642ad458406be986baf6096247', -- PetaByteBoy
          'bbc64c35bfc527f193e5551abd4fbef3940c44ebf75bdd829220b39913330d88', -- Jonathan
          '2a61930930a240c027f6ca4197203d400b6e4a32f9e92041e5f086907796c9bc', -- adorfer
          'd02f8e60fb7a5069556500694ebe512b6017b01e9950476e4cfcf10d5130c296', -- JJX
          '7afe187ceb34e83b2cb33c244ab5c8a7e80829c3e83b8d3fc471d2642eb6a602', -- limlug
          '96d644ff1ce07d6f67d9329a0eb9a1548d0d01a3519d17ec1fe9d49da3270bfc', -- plaste
          'cd97b5e735cdefb1da4aede68f127c8c2f4536df6f544b568df5c801b88a9225', -- alex
          'bd9e2ec7c5a1d420ff31543f27e02576b01ba5c887e726ab9388a25853b7d623', -- untrustworthy-buildbot
        },
      },
      beta = {
        name = 'beta',
        mirrors = {
           'http://firmware.ffnef-{{ shortname }}.ffnef.de/firmware/beta/ffnef-{{ shortname }}/sysupgrade',
          'http://firmware.ffnef-{{ shortname }}.ffnef/firmware/beta/ffnef-{{ shortname }}/sysupgrade',
          'http://firmware.ffnef.de/firmware/beta/ffnef-{{ shortname }}/sysupgrade',
          'http://[2a03:2260:300e:1300::733]/firmware/beta/ffnef-{{ shortname }}/sysupgrade',
        },
        good_signatures = 1,
        pubkeys = {
          'fb919d4adc69bd404f5093ce6b43badf351f9e642ad458406be986baf6096247', -- PetaByteBoy
          'bbc64c35bfc527f193e5551abd4fbef3940c44ebf75bdd829220b39913330d88', -- Jonathan
          '2a61930930a240c027f6ca4197203d400b6e4a32f9e92041e5f086907796c9bc', -- adorfer
          'd02f8e60fb7a5069556500694ebe512b6017b01e9950476e4cfcf10d5130c296', -- JJX
          '7afe187ceb34e83b2cb33c244ab5c8a7e80829c3e83b8d3fc471d2642eb6a602', -- limlug
          '96d644ff1ce07d6f67d9329a0eb9a1548d0d01a3519d17ec1fe9d49da3270bfc', -- plaste
          'cd97b5e735cdefb1da4aede68f127c8c2f4536df6f544b568df5c801b88a9225', -- alex
          'bd9e2ec7c5a1d420ff31543f27e02576b01ba5c887e726ab9388a25853b7d623', -- untrustworthy-buildbot
        },
      },
      experimental = {
        name = 'experimental',
        mirrors = {
          'http://firmware.ffnef-{{ shortname }}.ffnef.de/firmware/broken/ffnef-{{ shortname }}/sysupgrade',
          'http://firmware.ffnef-{{ shortname }}.ffnef/firmware/broken/ffnef-{{ shortname }}/sysupgrade',
          'http://firmware.ffnef.de/firmware/broken/ffnef-{{ shortname }}/images/sysupgrade',
          'http://[2a03:2260:300e:1300::733]/firmware/broken/ffnef-{{ shortname }}/sysupgrade',
        },
        good_signatures = 2,
        pubkeys = {
          'fb919d4adc69bd404f5093ce6b43badf351f9e642ad458406be986baf6096247', -- PetaByteBoy
          'bbc64c35bfc527f193e5551abd4fbef3940c44ebf75bdd829220b39913330d88', -- Jonathan
          '2a61930930a240c027f6ca4197203d400b6e4a32f9e92041e5f086907796c9bc', -- adorfer
          'd02f8e60fb7a5069556500694ebe512b6017b01e9950476e4cfcf10d5130c296', -- JJX
          '7afe187ceb34e83b2cb33c244ab5c8a7e80829c3e83b8d3fc471d2642eb6a602', -- limlug
          '96d644ff1ce07d6f67d9329a0eb9a1548d0d01a3519d17ec1fe9d49da3270bfc', -- plaste
          'cd97b5e735cdefb1da4aede68f127c8c2f4536df6f544b568df5c801b88a9225', -- alex
          'bd9e2ec7c5a1d420ff31543f27e02576b01ba5c887e726ab9388a25853b7d623', -- untrustworthy-buildbot
        },
      },
    },
  },
  roguenets_filter = {
    allowed_prefix4 = '{{ v4net }}',
    allowed_prefix6 = '2a03:2260::/29',
    additional_prefix6 = {
      'fda0:300e::/32',
      '2a0f:b507::/32',
    },
  },
  dns = {
    cacheentries = 1024,
    servers = { '2a03:2260:300e:{{ id }}00::3','2620:fe::10', '2001:4860:4860::8844', '2001:4860:4860::8888', },
  },

  ssid_changer = {
    enabled = true,
    switch_timeframe = 1,     -- only once every timeframe (in minutes) the SSID will change to OFFLINE
                              -- set to 1440 to change once a day
                              -- set to 1 minute to change every time the router gets offline
    first = 5,                -- the first few minutes directly after reboot within which an Offline-SSID always may be activated
    prefix = 'FF_Offline_',   -- use something short to leave space for the nodename (no '~' allowed!)
    suffix = 'nodename',      -- generate the SSID with either 'nodename', 'mac' or to use only the prefix: 'none'

    tq_limit_enabled = true,  -- if false, the offline SSID will only be set if there is no gateway reacheable
                              -- upper and lower limit to turn the offline_ssid on and off
                              -- in-between these two values the SSID will never be changed to prevent it from toggeling every minute.
    tq_limit_max = 45,        -- upper limit, above that the online SSID will be used
    tq_limit_min = 35         -- lower limit, below that the offline SSID will be used
  },
}
